/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../common";
import type { WEEDL, WEEDLInterface } from "../WEEDL";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "initialOwner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "initialSupply",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "allowance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "ERC20InsufficientAllowance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "ERC20InsufficientBalance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "approver",
        type: "address",
      },
    ],
    name: "ERC20InvalidApprover",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "ERC20InvalidReceiver",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSpender",
    type: "error",
  },
  {
    inputs: [],
    name: "MaxSupplyExceeded",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    inputs: [],
    name: "ReentrancyGuardReentrantCall",
    type: "error",
  },
  {
    inputs: [],
    name: "ZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "ZeroAmount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "Burn",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "MAX_SUPPLY",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalMinted",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001ea438038062001ea483398181016040528101906200003791906200065c565b816040518060400160405280600b81526020017f574545444c20546f6b656e0000000000000000000000000000000000000000008152506040518060400160405280600581526020017f574545444c0000000000000000000000000000000000000000000000000000008152508160039081620000b5919062000913565b508060049081620000c7919062000913565b505050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036200013f5760006040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040162000136919062000a0b565b60405180910390fd5b62000150816200023460201b60201c565b506001600681905550600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603620001c0576040517fd92e233d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000811480620001db57506b033b2e3c9fd0803ce800000081115b1562000213576040517f8a164f6300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b806007819055506200022c8282620002fa60201b60201c565b505062000afd565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036200036f5760006040517fec442f0500000000000000000000000000000000000000000000000000000000815260040162000366919062000a0b565b60405180910390fd5b62000383600083836200038760201b60201c565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603620003dd578060026000828254620003d0919062000a57565b92505081905550620004b3565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050818110156200046c578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401620004639392919062000aa3565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603620004fe57806002600082825403925050819055506200054b565b806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051620005aa919062000ae0565b60405180910390a3505050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620005e982620005bc565b9050919050565b620005fb81620005dc565b81146200060757600080fd5b50565b6000815190506200061b81620005f0565b92915050565b6000819050919050565b620006368162000621565b81146200064257600080fd5b50565b60008151905062000656816200062b565b92915050565b60008060408385031215620006765762000675620005b7565b5b600062000686858286016200060a565b9250506020620006998582860162000645565b9150509250929050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200072557607f821691505b6020821081036200073b576200073a620006dd565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620007a57fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8262000766565b620007b1868362000766565b95508019841693508086168417925050509392505050565b6000819050919050565b6000620007f4620007ee620007e88462000621565b620007c9565b62000621565b9050919050565b6000819050919050565b6200081083620007d3565b620008286200081f82620007fb565b84845462000773565b825550505050565b600090565b6200083f62000830565b6200084c81848462000805565b505050565b5b8181101562000874576200086860008262000835565b60018101905062000852565b5050565b601f821115620008c3576200088d8162000741565b620008988462000756565b81016020851015620008a8578190505b620008c0620008b78562000756565b83018262000851565b50505b505050565b600082821c905092915050565b6000620008e860001984600802620008c8565b1980831691505092915050565b6000620009038383620008d5565b9150826002028217905092915050565b6200091e82620006a3565b67ffffffffffffffff8111156200093a5762000939620006ae565b5b6200094682546200070c565b6200095382828562000878565b600060209050601f8311600181146200098b576000841562000976578287015190505b620009828582620008f5565b865550620009f2565b601f1984166200099b8662000741565b60005b82811015620009c5578489015182556001820191506020850194506020810190506200099e565b86831015620009e55784890151620009e1601f891682620008d5565b8355505b6001600288020188555050505b505050505050565b62000a0581620005dc565b82525050565b600060208201905062000a226000830184620009fa565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600062000a648262000621565b915062000a718362000621565b925082820190508082111562000a8c5762000a8b62000a28565b5b92915050565b62000a9d8162000621565b82525050565b600060608201905062000aba6000830186620009fa565b62000ac9602083018562000a92565b62000ad8604083018462000a92565b949350505050565b600060208201905062000af7600083018462000a92565b92915050565b6113978062000b0d6000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c806370a0823111610097578063a2309ff811610066578063a2309ff814610264578063a9059cbb14610282578063dd62ed3e146102b2578063f2fde38b146102e2576100f5565b806370a08231146101ee578063715018a61461021e5780638da5cb5b1461022857806395d89b4114610246576100f5565b806323b872dd116100d357806323b872dd14610166578063313ce5671461019657806332cb6b0c146101b457806342966c68146101d2576100f5565b806306fdde03146100fa578063095ea7b31461011857806318160ddd14610148575b600080fd5b6101026102fe565b60405161010f9190610f61565b60405180910390f35b610132600480360381019061012d919061101c565b610390565b60405161013f9190611077565b60405180910390f35b6101506103b3565b60405161015d91906110a1565b60405180910390f35b610180600480360381019061017b91906110bc565b6103bd565b60405161018d9190611077565b60405180910390f35b61019e6103ec565b6040516101ab919061112b565b60405180910390f35b6101bc6103f5565b6040516101c991906110a1565b60405180910390f35b6101ec60048036038101906101e79190611146565b610405565b005b61020860048036038101906102039190611173565b6104c5565b60405161021591906110a1565b60405180910390f35b61022661050d565b005b610230610521565b60405161023d91906111af565b60405180910390f35b61024e61054b565b60405161025b9190610f61565b60405180910390f35b61026c6105dd565b60405161027991906110a1565b60405180910390f35b61029c6004803603810190610297919061101c565b6105e3565b6040516102a99190611077565b60405180910390f35b6102cc60048036038101906102c791906111ca565b610606565b6040516102d991906110a1565b60405180910390f35b6102fc60048036038101906102f79190611173565b61068d565b005b60606003805461030d90611239565b80601f016020809104026020016040519081016040528092919081815260200182805461033990611239565b80156103865780601f1061035b57610100808354040283529160200191610386565b820191906000526020600020905b81548152906001019060200180831161036957829003601f168201915b5050505050905090565b60008061039b610713565b90506103a881858561071b565b600191505092915050565b6000600254905090565b6000806103c8610713565b90506103d585828561072d565b6103e08585856107c2565b60019150509392505050565b60006012905090565b6b033b2e3c9fd0803ce800000081565b61040d6108b6565b60008103610447576040517f1f2a200500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61045133826108fc565b80600760008282546104639190611299565b925050819055503373ffffffffffffffffffffffffffffffffffffffff167f49995e5dd6158cf69ad3e9777c46755a1a826a446c6416992167462dad033b2a82426040516104b29291906112cd565b60405180910390a26104c261097e565b50565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b610515610988565b61051f6000610a0f565b565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60606004805461055a90611239565b80601f016020809104026020016040519081016040528092919081815260200182805461058690611239565b80156105d35780601f106105a8576101008083540402835291602001916105d3565b820191906000526020600020905b8154815290600101906020018083116105b657829003601f168201915b5050505050905090565b60075481565b6000806105ee610713565b90506105fb8185856107c2565b600191505092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b610695610988565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036107075760006040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016106fe91906111af565b60405180910390fd5b61071081610a0f565b50565b600033905090565b6107288383836001610ad5565b505050565b60006107398484610606565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8110156107bc57818110156107ac578281836040517ffb8f41b20000000000000000000000000000000000000000000000000000000081526004016107a3939291906112f6565b60405180910390fd5b6107bb84848484036000610ad5565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036108345760006040517f96c6fd1e00000000000000000000000000000000000000000000000000000000815260040161082b91906111af565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036108a65760006040517fec442f0500000000000000000000000000000000000000000000000000000000815260040161089d91906111af565b60405180910390fd5b6108b1838383610cac565b505050565b6002600654036108f2576040517f3ee5aeb500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6002600681905550565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361096e5760006040517f96c6fd1e00000000000000000000000000000000000000000000000000000000815260040161096591906111af565b60405180910390fd5b61097a82600083610cac565b5050565b6001600681905550565b610990610713565b73ffffffffffffffffffffffffffffffffffffffff166109ae610521565b73ffffffffffffffffffffffffffffffffffffffff1614610a0d576109d1610713565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610a0491906111af565b60405180910390fd5b565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610b475760006040517fe602df05000000000000000000000000000000000000000000000000000000008152600401610b3e91906111af565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610bb95760006040517f94280d62000000000000000000000000000000000000000000000000000000008152600401610bb091906111af565b60405180910390fd5b81600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508015610ca6578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051610c9d91906110a1565b60405180910390a35b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610cfe578060026000828254610cf2919061132d565b92505081905550610dd1565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610d8a578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401610d81939291906112f6565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610e1a5780600260008282540392505081905550610e67565b806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610ec491906110a1565b60405180910390a3505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610f0b578082015181840152602081019050610ef0565b60008484015250505050565b6000601f19601f8301169050919050565b6000610f3382610ed1565b610f3d8185610edc565b9350610f4d818560208601610eed565b610f5681610f17565b840191505092915050565b60006020820190508181036000830152610f7b8184610f28565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610fb382610f88565b9050919050565b610fc381610fa8565b8114610fce57600080fd5b50565b600081359050610fe081610fba565b92915050565b6000819050919050565b610ff981610fe6565b811461100457600080fd5b50565b60008135905061101681610ff0565b92915050565b6000806040838503121561103357611032610f83565b5b600061104185828601610fd1565b925050602061105285828601611007565b9150509250929050565b60008115159050919050565b6110718161105c565b82525050565b600060208201905061108c6000830184611068565b92915050565b61109b81610fe6565b82525050565b60006020820190506110b66000830184611092565b92915050565b6000806000606084860312156110d5576110d4610f83565b5b60006110e386828701610fd1565b93505060206110f486828701610fd1565b925050604061110586828701611007565b9150509250925092565b600060ff82169050919050565b6111258161110f565b82525050565b6000602082019050611140600083018461111c565b92915050565b60006020828403121561115c5761115b610f83565b5b600061116a84828501611007565b91505092915050565b60006020828403121561118957611188610f83565b5b600061119784828501610fd1565b91505092915050565b6111a981610fa8565b82525050565b60006020820190506111c460008301846111a0565b92915050565b600080604083850312156111e1576111e0610f83565b5b60006111ef85828601610fd1565b925050602061120085828601610fd1565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061125157607f821691505b6020821081036112645761126361120a565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006112a482610fe6565b91506112af83610fe6565b92508282039050818111156112c7576112c661126a565b5b92915050565b60006040820190506112e26000830185611092565b6112ef6020830184611092565b9392505050565b600060608201905061130b60008301866111a0565b6113186020830185611092565b6113256040830184611092565b949350505050565b600061133882610fe6565b915061134383610fe6565b925082820190508082111561135b5761135a61126a565b5b9291505056fea2646970667358221220df4dbe501551b2ee7f587aeb1f209b65c359fc2dc75876c1bf53768f32de046364736f6c63430008160033";

type WEEDLConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: WEEDLConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class WEEDL__factory extends ContractFactory {
  constructor(...args: WEEDLConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    initialOwner: AddressLike,
    initialSupply: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      initialOwner,
      initialSupply,
      overrides || {}
    );
  }
  override deploy(
    initialOwner: AddressLike,
    initialSupply: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      initialOwner,
      initialSupply,
      overrides || {}
    ) as Promise<
      WEEDL & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): WEEDL__factory {
    return super.connect(runner) as WEEDL__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): WEEDLInterface {
    return new Interface(_abi) as WEEDLInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): WEEDL {
    return new Contract(address, _abi, runner) as unknown as WEEDL;
  }
}
